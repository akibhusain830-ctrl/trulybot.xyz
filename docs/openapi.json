{
  "openapi": "3.0.3",
  "info": {
    "title": "TrulyBot API",
    "description": "AI-powered chatbot platform API for e-commerce businesses",
    "version": "1.0.0",
    "contact": {
      "name": "TrulyBot Support",
      "url": "https://trulybot.xyz/contact",
      "email": "support@trulybot.xyz"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://trulybot.xyz/api",
      "description": "Production server"
    },
    {
      "url": "https://staging.trulybot.xyz/api",
      "description": "Staging server"
    },
    {
      "url": "http://localhost:3000/api",
      "description": "Development server"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": ["System"],
        "summary": "Health check endpoint",
        "description": "Returns the health status of the application and its dependencies",
        "operationId": "getHealth",
        "responses": {
          "200": {
            "description": "Service is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheck"
                }
              }
            }
          },
          "503": {
            "description": "Service is unhealthy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheck"
                }
              }
            }
          }
        }
      }
    },
    "/chat": {
      "post": {
        "tags": ["Chat"],
        "summary": "Send a chat message",
        "description": "Send a message to the AI chatbot and receive a response",
        "operationId": "sendChatMessage",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chat response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "description": "AI-generated response"
                }
              }
            },
            "headers": {
              "x-knowledge-source": {
                "description": "Source of knowledge used for the response",
                "schema": {
                  "type": "string",
                  "enum": ["kb", "docs", "general", "none"]
                }
              },
              "x-used-docs": {
                "description": "Whether documents were used in the response",
                "schema": {
                  "type": "string",
                  "enum": ["true", "false"]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/leads": {
      "get": {
        "tags": ["Leads"],
        "summary": "Get leads",
        "description": "Retrieve a paginated list of leads",
        "operationId": "getLeads",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspaceId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Filter by workspace ID"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["new", "incomplete", "qualified", "contacted", "discarded"]
            },
            "description": "Filter by lead status"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of leads",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedLeadsResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": ["Leads"],
        "summary": "Create a lead",
        "description": "Create a new lead record",
        "operationId": "createLead",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLead"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Lead created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/documents": {
      "post": {
        "tags": ["Documents"],
        "summary": "Upload a document",
        "description": "Upload and process a document for the knowledge base",
        "operationId": "uploadDocument",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDocument"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Document uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "413": {
            "description": "Document too large"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/payments/create-order": {
      "post": {
        "tags": ["Payments"],
        "summary": "Create payment order",
        "description": "Create a new payment order for subscription",
        "operationId": "createPaymentOrder",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrder"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payment order created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentOrder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Supabase JWT token"
      }
    },
    "schemas": {
      "HealthCheck": {
        "type": "object",
        "required": ["status", "timestamp", "checks", "version"],
        "properties": {
          "status": {
            "type": "string",
            "enum": ["healthy", "unhealthy"]
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "checks": {
            "type": "object",
            "required": ["database", "openai", "environment"],
            "properties": {
              "database": {
                "type": "string",
                "enum": ["pass", "fail"]
              },
              "openai": {
                "type": "string",
                "enum": ["pass", "fail"]
              },
              "environment": {
                "type": "string",
                "enum": ["pass", "fail"]
              }
            }
          },
          "version": {
            "type": "string"
          },
          "uptime": {
            "type": "number"
          }
        }
      },
      "ChatMessage": {
        "type": "object",
        "required": ["role", "content"],
        "properties": {
          "role": {
            "type": "string",
            "enum": ["user", "bot", "assistant"]
          },
          "content": {
            "type": "string",
            "minLength": 1,
            "maxLength": 10000
          }
        }
      },
      "ChatRequest": {
        "type": "object",
        "required": ["botId", "messages"],
        "properties": {
          "botId": {
            "type": "string",
            "minLength": 1
          },
          "messages": {
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/ChatMessage"
            }
          }
        }
      },
      "Lead": {
        "type": "object",
        "required": ["id", "createdAt"],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "company": {
            "type": "string",
            "maxLength": 255
          },
          "phone": {
            "type": "string",
            "maxLength": 50
          },
          "status": {
            "type": "string",
            "enum": ["new", "incomplete", "qualified", "contacted", "discarded"],
            "default": "new"
          },
          "workspaceId": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateLead": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "company": {
            "type": "string",
            "maxLength": 255
          },
          "phone": {
            "type": "string",
            "maxLength": 50
          },
          "workspaceId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Document": {
        "type": "object",
        "required": ["id", "filename", "status", "createdAt"],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "filename": {
            "type": "string",
            "maxLength": 255
          },
          "content": {
            "type": "string"
          },
          "contentType": {
            "type": "string",
            "default": "text/plain"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "processing", "completed", "error"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateDocument": {
        "type": "object",
        "required": ["filename", "content"],
        "properties": {
          "filename": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "content": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1000000
          },
          "contentType": {
            "type": "string",
            "default": "text/plain"
          }
        }
      },
      "CreateOrder": {
        "type": "object",
        "required": ["planId", "userId"],
        "properties": {
          "planId": {
            "type": "string",
            "enum": ["basic", "pro", "ultra"]
          },
          "currency": {
            "type": "string",
            "enum": ["INR", "USD"],
            "default": "INR"
          },
          "billingPeriod": {
            "type": "string",
            "enum": ["monthly", "yearly"],
            "default": "monthly"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "PaymentOrder": {
        "type": "object",
        "required": ["orderId", "amount", "currency"],
        "properties": {
          "orderId": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          }
        }
      },
      "PaginatedLeadsResponse": {
        "type": "object",
        "required": ["data", "pagination"],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Lead"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "Pagination": {
        "type": "object",
        "required": ["page", "pageSize", "total", "totalPages"],
        "properties": {
          "page": {
            "type": "integer",
            "minimum": 1
          },
          "pageSize": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          },
          "total": {
            "type": "integer",
            "minimum": 0
          },
          "totalPages": {
            "type": "integer",
            "minimum": 0
          }
        }
      },
      "Error": {
        "type": "object",
        "required": ["success", "error"],
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [false]
          },
          "error": {
            "type": "object",
            "required": ["message"],
            "properties": {
              "message": {
                "type": "string"
              },
              "code": {
                "type": "string"
              },
              "details": {
                "type": "object"
              }
            }
          },
          "meta": {
            "type": "object",
            "required": ["timestamp", "requestId"],
            "properties": {
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "requestId": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "System",
      "description": "System health and monitoring endpoints"
    },
    {
      "name": "Chat",
      "description": "AI chatbot interaction endpoints"
    },
    {
      "name": "Leads",
      "description": "Lead management endpoints"
    },
    {
      "name": "Documents",
      "description": "Document and knowledge base management"
    },
    {
      "name": "Payments",
      "description": "Payment and subscription management"
    }
  ]
}